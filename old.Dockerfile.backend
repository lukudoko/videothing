# --- Stage 1: Builder ---
FROM nvidia/cuda:11.8.0-cudnn8-devel-ubuntu22.04 AS builder

ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1

# Install minimal build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.10 \
    python3.10-dev \
    python3.10-venv \
    python3-pip \
    build-essential \
    git \
    libsndfile1-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set up Python alternatives
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1

# Create virtual environment
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

WORKDIR /app

# Copy requirements
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    # Install PyTorch with CUDA 11.8
    pip install --no-cache-dir \
        torch==2.0.1+cu118 \
        torchvision==0.15.2+cu118 \
        torchaudio==2.0.2+cu118 \
        --extra-index-url https://download.pytorch.org/whl/cu118 && \
    # Install other dependencies
    pip install --no-cache-dir \
        openai-whisper \
        fastapi \
        uvicorn[standard] \
        beautifulsoup4 \
        requests \
        tqdm \
        python-multipart && \
    # Pre-download Whisper model in appuser location
    mkdir -p /home/appuser/.cache/whisper && \
    pip install --no-cache-dir numpy==1.26.4

# Pre-download Whisper model
RUN python3 -c "import whisper; model = whisper.load_model('small'); print(f'Model loaded: {model}')"

# Copy application code
COPY backend/ ./backend/

# --- Stage 2: Runtime (Much Smaller) ---
FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04 AS runtime

ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive

# Install minimal runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.10 \
    python3.10-venv \
    libsndfile1 \
    libgomp1 \
    ffmpeg \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user
ARG USER_ID=1000
ARG GROUP_ID=1000
RUN groupadd -g $GROUP_ID appuser && \
    useradd -u $USER_ID -g $GROUP_ID -m -s /bin/bash appuser

WORKDIR /app

# Copy only necessary parts from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy Whisper model cache with proper ownership
COPY --from=builder --chown=appuser:appuser /home/appuser/.cache /home/appuser/.cache

# Copy application code
COPY --from=builder --chown=appuser:appuser /app/backend ./backend

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8005

# Health check (simplified)
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8005/health || exit 1

# Command to run FastAPI application
CMD ["python3", "-m", "uvicorn", "backend.main:app", "--host", "0.0.0.0", "--port", "8005"]
