# Use NVIDIA's runtime image
FROM nvidia/cuda:12.4.1-runtime-ubuntu22.04

# Install system dependencies
RUN apt-get update && apt-get install -y \
    wget \
    xz-utils \
    python3.10 \
    python3.10-dev \
    python3-pip \
    libnvidia-encode-515 \
    libnvidia-decode-515 \
    && rm -rf /var/lib/apt/lists/*

# Download and install FFmpeg with guaranteed NVENC support
RUN cd /tmp && \
    wget https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-linux64-gpl.tar.xz && \
    tar -xf ffmpeg-master-latest-linux64-gpl.tar.xz && \
    cp ffmpeg-master-latest-linux64-gpl/bin/ffmpeg /usr/local/bin/ && \
    cp ffmpeg-master-latest-linux64-gpl/bin/ffprobe /usr/local/bin/ && \
    chmod +x /usr/local/bin/ffmpeg /usr/local/bin/ffprobe && \
    rm -rf ffmpeg-master-latest-linux64-gpl*

# Set up Python 3.10 as default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1
RUN update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1

# Create a user with the same UID/GID as your host user
# You'll need to replace 1000:1000 with your actual user's UID:GID
ARG USER_ID=1000
ARG GROUP_ID=1000
RUN groupadd -g $GROUP_ID appuser && \
    useradd -u $USER_ID -g $GROUP_ID -m -s /bin/bash appuser

# Set working directory
WORKDIR /app

# Copy and install Python requirements
COPY backend/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code and change ownership
COPY backend/ .
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8005

# Verify NVENC encoders are available (run as root for this check)
USER root
RUN echo "=== FFmpeg Version ===" && \
    ffmpeg -version && \
    echo "=== Available NVENC Encoders ===" && \
    ffmpeg -encoders 2>/dev/null | grep nvenc

# Switch back to appuser for runtime
USER appuser

CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8005"]
